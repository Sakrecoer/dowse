#!/usr/bin/zsh

source $R/env

if [[ "$access_point" == "no" ]]; then
	act "Access point disabled"
	while : ; do
		sleep 3600
	done
fi

# No device card with AP capabilities has been found
if [[ "$ap_interface" == "" ]] ; then
	act "No network card with Access Point capability found"
	while : ; do
		sleep 3600
	done
fi

# Be sure thah the interface is free
rfkill unblock wlan

# Base config for the daemon
cat <<EOF > /run/dowse/conf/hostapd.conf
# Reference configuration
# http://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf
logger_syslog=-1
logger_syslog_level=2
logger_stdout=-1
logger_stdout_level=3 # Log notification messages

interface=$ap_interface

ctrl_interface=/run/dowse/hostapd # Change folder for control socket
# Give access permission to dowse group
ctrl_interface_group=dowse

#auth_algs=1           # Do not use WPA/WEP
# the channel to use, 0 means the AP will search for the channel with the least interferences
# Raspberry PI 3 is not working with channel=0, hardcode channel 7 for now
channel=7
wmm_enabled=1         # QoS support

utf8_ssid=1           # Use utf8 for SSID
EOF

# Check how many network should be created
# 1: Create a bridge with the WAN network (assume there is only one LAN network
# that is connected to internet, using $interface)
if [[ ${#ssid} -le 1 ]]; then
	cat <<EOF >> /run/dowse/conf/hostapd.conf
# Use a bridge
bridge=$bridge
ssid=${ssid-Dowse Access Point}
EOF
	if [[ ${#passphrase} -ge 1 ]]; then
		if [[ ${#passphrase} -lt 8 || ${#passphrase} -gt 64 ]]; then
			error "Passphrase must have from 8 to 64 characters"
		fi
		cat <<EOF >> /run/dowse/conf/hostapd.conf
#auth_algs=2           # 1=wpa, 2=wep, 3=both
wpa=2                 # WPA2 only
wpa_key_mgmt=WPA-PSK
#wpa_pairwise=CCMP
#rsn_pairwise=CCMP
wpa_passphrase=${passphrase}
EOF
	fi
# 2+: Create as many network as requested in /etc/dowse/settings, with different
# SSID and passphrase (if any), use NAT to allow connection
#else
#	for (( i = 1; i <= $#ssid; i++ )) do
#		# Skip empty ssid
#		if [[ "" == "$ssid[$i]" ]]; then
#			continue
#		fi
#		cat <<EOF >> /run/dowse/conf/hostapd.conf
#bss=dowse_wifi$i
#ssid=${ssid[$i]}
#EOF
#		if [[ "${passphrase[$i]}" != "" ]]; then
#			cat <<EOF >> $H/run/conf/hostapd.conf
#auth_algs=2           # 1=wpa, 2=wep, 3=both
#wpa=2                 # WPA2 only
#wpa_key_mgmt=WPA-PSK
#rsn_pairwise=CCMP
#wpa_passphrase=${passphrase[1]}
#EOF
#		fi
#	done
fi

exec hostapd /run/dowse/conf/hostapd.conf

